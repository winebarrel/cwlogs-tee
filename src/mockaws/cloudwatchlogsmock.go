// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/sugawara/.go/src/github.com/aws/aws-sdk-go/service/cloudwatchlogs/cloudwatchlogsiface/interface.go

package mockaws

import (
	aws "github.com/aws/aws-sdk-go/aws"
	request "github.com/aws/aws-sdk-go/aws/request"
	cloudwatchlogs "github.com/aws/aws-sdk-go/service/cloudwatchlogs"
	gomock "github.com/golang/mock/gomock"
)

// MockCloudWatchLogsAPI is a mock of CloudWatchLogsAPI interface
type MockCloudWatchLogsAPI struct {
	ctrl     *gomock.Controller
	recorder *MockCloudWatchLogsAPIMockRecorder
}

// MockCloudWatchLogsAPIMockRecorder is the mock recorder for MockCloudWatchLogsAPI
type MockCloudWatchLogsAPIMockRecorder struct {
	mock *MockCloudWatchLogsAPI
}

// NewMockCloudWatchLogsAPI creates a new mock instance
func NewMockCloudWatchLogsAPI(ctrl *gomock.Controller) *MockCloudWatchLogsAPI {
	mock := &MockCloudWatchLogsAPI{ctrl: ctrl}
	mock.recorder = &MockCloudWatchLogsAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockCloudWatchLogsAPI) EXPECT() *MockCloudWatchLogsAPIMockRecorder {
	return _m.recorder
}

// CancelExportTask mocks base method
func (_m *MockCloudWatchLogsAPI) CancelExportTask(_param0 *cloudwatchlogs.CancelExportTaskInput) (*cloudwatchlogs.CancelExportTaskOutput, error) {
	ret := _m.ctrl.Call(_m, "CancelExportTask", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.CancelExportTaskOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CancelExportTask indicates an expected call of CancelExportTask
func (_mr *MockCloudWatchLogsAPIMockRecorder) CancelExportTask(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CancelExportTask", arg0)
}

// CancelExportTaskWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) CancelExportTaskWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.CancelExportTaskInput, _param2 ...request.Option) (*cloudwatchlogs.CancelExportTaskOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "CancelExportTaskWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.CancelExportTaskOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CancelExportTaskWithContext indicates an expected call of CancelExportTaskWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) CancelExportTaskWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CancelExportTaskWithContext", _s...)
}

// CancelExportTaskRequest mocks base method
func (_m *MockCloudWatchLogsAPI) CancelExportTaskRequest(_param0 *cloudwatchlogs.CancelExportTaskInput) (*request.Request, *cloudwatchlogs.CancelExportTaskOutput) {
	ret := _m.ctrl.Call(_m, "CancelExportTaskRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.CancelExportTaskOutput)
	return ret0, ret1
}

// CancelExportTaskRequest indicates an expected call of CancelExportTaskRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) CancelExportTaskRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CancelExportTaskRequest", arg0)
}

// CreateExportTask mocks base method
func (_m *MockCloudWatchLogsAPI) CreateExportTask(_param0 *cloudwatchlogs.CreateExportTaskInput) (*cloudwatchlogs.CreateExportTaskOutput, error) {
	ret := _m.ctrl.Call(_m, "CreateExportTask", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.CreateExportTaskOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateExportTask indicates an expected call of CreateExportTask
func (_mr *MockCloudWatchLogsAPIMockRecorder) CreateExportTask(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateExportTask", arg0)
}

// CreateExportTaskWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) CreateExportTaskWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.CreateExportTaskInput, _param2 ...request.Option) (*cloudwatchlogs.CreateExportTaskOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "CreateExportTaskWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.CreateExportTaskOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateExportTaskWithContext indicates an expected call of CreateExportTaskWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) CreateExportTaskWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateExportTaskWithContext", _s...)
}

// CreateExportTaskRequest mocks base method
func (_m *MockCloudWatchLogsAPI) CreateExportTaskRequest(_param0 *cloudwatchlogs.CreateExportTaskInput) (*request.Request, *cloudwatchlogs.CreateExportTaskOutput) {
	ret := _m.ctrl.Call(_m, "CreateExportTaskRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.CreateExportTaskOutput)
	return ret0, ret1
}

// CreateExportTaskRequest indicates an expected call of CreateExportTaskRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) CreateExportTaskRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateExportTaskRequest", arg0)
}

// CreateLogGroup mocks base method
func (_m *MockCloudWatchLogsAPI) CreateLogGroup(_param0 *cloudwatchlogs.CreateLogGroupInput) (*cloudwatchlogs.CreateLogGroupOutput, error) {
	ret := _m.ctrl.Call(_m, "CreateLogGroup", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.CreateLogGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLogGroup indicates an expected call of CreateLogGroup
func (_mr *MockCloudWatchLogsAPIMockRecorder) CreateLogGroup(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateLogGroup", arg0)
}

// CreateLogGroupWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) CreateLogGroupWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.CreateLogGroupInput, _param2 ...request.Option) (*cloudwatchlogs.CreateLogGroupOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "CreateLogGroupWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.CreateLogGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLogGroupWithContext indicates an expected call of CreateLogGroupWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) CreateLogGroupWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateLogGroupWithContext", _s...)
}

// CreateLogGroupRequest mocks base method
func (_m *MockCloudWatchLogsAPI) CreateLogGroupRequest(_param0 *cloudwatchlogs.CreateLogGroupInput) (*request.Request, *cloudwatchlogs.CreateLogGroupOutput) {
	ret := _m.ctrl.Call(_m, "CreateLogGroupRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.CreateLogGroupOutput)
	return ret0, ret1
}

// CreateLogGroupRequest indicates an expected call of CreateLogGroupRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) CreateLogGroupRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateLogGroupRequest", arg0)
}

// CreateLogStream mocks base method
func (_m *MockCloudWatchLogsAPI) CreateLogStream(_param0 *cloudwatchlogs.CreateLogStreamInput) (*cloudwatchlogs.CreateLogStreamOutput, error) {
	ret := _m.ctrl.Call(_m, "CreateLogStream", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.CreateLogStreamOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLogStream indicates an expected call of CreateLogStream
func (_mr *MockCloudWatchLogsAPIMockRecorder) CreateLogStream(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateLogStream", arg0)
}

// CreateLogStreamWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) CreateLogStreamWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.CreateLogStreamInput, _param2 ...request.Option) (*cloudwatchlogs.CreateLogStreamOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "CreateLogStreamWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.CreateLogStreamOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateLogStreamWithContext indicates an expected call of CreateLogStreamWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) CreateLogStreamWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateLogStreamWithContext", _s...)
}

// CreateLogStreamRequest mocks base method
func (_m *MockCloudWatchLogsAPI) CreateLogStreamRequest(_param0 *cloudwatchlogs.CreateLogStreamInput) (*request.Request, *cloudwatchlogs.CreateLogStreamOutput) {
	ret := _m.ctrl.Call(_m, "CreateLogStreamRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.CreateLogStreamOutput)
	return ret0, ret1
}

// CreateLogStreamRequest indicates an expected call of CreateLogStreamRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) CreateLogStreamRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateLogStreamRequest", arg0)
}

// DeleteDestination mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteDestination(_param0 *cloudwatchlogs.DeleteDestinationInput) (*cloudwatchlogs.DeleteDestinationOutput, error) {
	ret := _m.ctrl.Call(_m, "DeleteDestination", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.DeleteDestinationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteDestination indicates an expected call of DeleteDestination
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteDestination(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteDestination", arg0)
}

// DeleteDestinationWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteDestinationWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DeleteDestinationInput, _param2 ...request.Option) (*cloudwatchlogs.DeleteDestinationOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DeleteDestinationWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.DeleteDestinationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteDestinationWithContext indicates an expected call of DeleteDestinationWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteDestinationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteDestinationWithContext", _s...)
}

// DeleteDestinationRequest mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteDestinationRequest(_param0 *cloudwatchlogs.DeleteDestinationInput) (*request.Request, *cloudwatchlogs.DeleteDestinationOutput) {
	ret := _m.ctrl.Call(_m, "DeleteDestinationRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.DeleteDestinationOutput)
	return ret0, ret1
}

// DeleteDestinationRequest indicates an expected call of DeleteDestinationRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteDestinationRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteDestinationRequest", arg0)
}

// DeleteLogGroup mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteLogGroup(_param0 *cloudwatchlogs.DeleteLogGroupInput) (*cloudwatchlogs.DeleteLogGroupOutput, error) {
	ret := _m.ctrl.Call(_m, "DeleteLogGroup", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.DeleteLogGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteLogGroup indicates an expected call of DeleteLogGroup
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteLogGroup(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteLogGroup", arg0)
}

// DeleteLogGroupWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteLogGroupWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DeleteLogGroupInput, _param2 ...request.Option) (*cloudwatchlogs.DeleteLogGroupOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DeleteLogGroupWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.DeleteLogGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteLogGroupWithContext indicates an expected call of DeleteLogGroupWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteLogGroupWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteLogGroupWithContext", _s...)
}

// DeleteLogGroupRequest mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteLogGroupRequest(_param0 *cloudwatchlogs.DeleteLogGroupInput) (*request.Request, *cloudwatchlogs.DeleteLogGroupOutput) {
	ret := _m.ctrl.Call(_m, "DeleteLogGroupRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.DeleteLogGroupOutput)
	return ret0, ret1
}

// DeleteLogGroupRequest indicates an expected call of DeleteLogGroupRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteLogGroupRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteLogGroupRequest", arg0)
}

// DeleteLogStream mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteLogStream(_param0 *cloudwatchlogs.DeleteLogStreamInput) (*cloudwatchlogs.DeleteLogStreamOutput, error) {
	ret := _m.ctrl.Call(_m, "DeleteLogStream", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.DeleteLogStreamOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteLogStream indicates an expected call of DeleteLogStream
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteLogStream(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteLogStream", arg0)
}

// DeleteLogStreamWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteLogStreamWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DeleteLogStreamInput, _param2 ...request.Option) (*cloudwatchlogs.DeleteLogStreamOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DeleteLogStreamWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.DeleteLogStreamOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteLogStreamWithContext indicates an expected call of DeleteLogStreamWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteLogStreamWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteLogStreamWithContext", _s...)
}

// DeleteLogStreamRequest mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteLogStreamRequest(_param0 *cloudwatchlogs.DeleteLogStreamInput) (*request.Request, *cloudwatchlogs.DeleteLogStreamOutput) {
	ret := _m.ctrl.Call(_m, "DeleteLogStreamRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.DeleteLogStreamOutput)
	return ret0, ret1
}

// DeleteLogStreamRequest indicates an expected call of DeleteLogStreamRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteLogStreamRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteLogStreamRequest", arg0)
}

// DeleteMetricFilter mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteMetricFilter(_param0 *cloudwatchlogs.DeleteMetricFilterInput) (*cloudwatchlogs.DeleteMetricFilterOutput, error) {
	ret := _m.ctrl.Call(_m, "DeleteMetricFilter", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.DeleteMetricFilterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteMetricFilter indicates an expected call of DeleteMetricFilter
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteMetricFilter(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteMetricFilter", arg0)
}

// DeleteMetricFilterWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteMetricFilterWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DeleteMetricFilterInput, _param2 ...request.Option) (*cloudwatchlogs.DeleteMetricFilterOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DeleteMetricFilterWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.DeleteMetricFilterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteMetricFilterWithContext indicates an expected call of DeleteMetricFilterWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteMetricFilterWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteMetricFilterWithContext", _s...)
}

// DeleteMetricFilterRequest mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteMetricFilterRequest(_param0 *cloudwatchlogs.DeleteMetricFilterInput) (*request.Request, *cloudwatchlogs.DeleteMetricFilterOutput) {
	ret := _m.ctrl.Call(_m, "DeleteMetricFilterRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.DeleteMetricFilterOutput)
	return ret0, ret1
}

// DeleteMetricFilterRequest indicates an expected call of DeleteMetricFilterRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteMetricFilterRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteMetricFilterRequest", arg0)
}

// DeleteRetentionPolicy mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteRetentionPolicy(_param0 *cloudwatchlogs.DeleteRetentionPolicyInput) (*cloudwatchlogs.DeleteRetentionPolicyOutput, error) {
	ret := _m.ctrl.Call(_m, "DeleteRetentionPolicy", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.DeleteRetentionPolicyOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteRetentionPolicy indicates an expected call of DeleteRetentionPolicy
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteRetentionPolicy(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteRetentionPolicy", arg0)
}

// DeleteRetentionPolicyWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteRetentionPolicyWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DeleteRetentionPolicyInput, _param2 ...request.Option) (*cloudwatchlogs.DeleteRetentionPolicyOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DeleteRetentionPolicyWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.DeleteRetentionPolicyOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteRetentionPolicyWithContext indicates an expected call of DeleteRetentionPolicyWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteRetentionPolicyWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteRetentionPolicyWithContext", _s...)
}

// DeleteRetentionPolicyRequest mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteRetentionPolicyRequest(_param0 *cloudwatchlogs.DeleteRetentionPolicyInput) (*request.Request, *cloudwatchlogs.DeleteRetentionPolicyOutput) {
	ret := _m.ctrl.Call(_m, "DeleteRetentionPolicyRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.DeleteRetentionPolicyOutput)
	return ret0, ret1
}

// DeleteRetentionPolicyRequest indicates an expected call of DeleteRetentionPolicyRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteRetentionPolicyRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteRetentionPolicyRequest", arg0)
}

// DeleteSubscriptionFilter mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteSubscriptionFilter(_param0 *cloudwatchlogs.DeleteSubscriptionFilterInput) (*cloudwatchlogs.DeleteSubscriptionFilterOutput, error) {
	ret := _m.ctrl.Call(_m, "DeleteSubscriptionFilter", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.DeleteSubscriptionFilterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteSubscriptionFilter indicates an expected call of DeleteSubscriptionFilter
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteSubscriptionFilter(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteSubscriptionFilter", arg0)
}

// DeleteSubscriptionFilterWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteSubscriptionFilterWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DeleteSubscriptionFilterInput, _param2 ...request.Option) (*cloudwatchlogs.DeleteSubscriptionFilterOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DeleteSubscriptionFilterWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.DeleteSubscriptionFilterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteSubscriptionFilterWithContext indicates an expected call of DeleteSubscriptionFilterWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteSubscriptionFilterWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteSubscriptionFilterWithContext", _s...)
}

// DeleteSubscriptionFilterRequest mocks base method
func (_m *MockCloudWatchLogsAPI) DeleteSubscriptionFilterRequest(_param0 *cloudwatchlogs.DeleteSubscriptionFilterInput) (*request.Request, *cloudwatchlogs.DeleteSubscriptionFilterOutput) {
	ret := _m.ctrl.Call(_m, "DeleteSubscriptionFilterRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.DeleteSubscriptionFilterOutput)
	return ret0, ret1
}

// DeleteSubscriptionFilterRequest indicates an expected call of DeleteSubscriptionFilterRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) DeleteSubscriptionFilterRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteSubscriptionFilterRequest", arg0)
}

// DescribeDestinations mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeDestinations(_param0 *cloudwatchlogs.DescribeDestinationsInput) (*cloudwatchlogs.DescribeDestinationsOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeDestinations", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.DescribeDestinationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDestinations indicates an expected call of DescribeDestinations
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeDestinations(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeDestinations", arg0)
}

// DescribeDestinationsWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeDestinationsWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DescribeDestinationsInput, _param2 ...request.Option) (*cloudwatchlogs.DescribeDestinationsOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DescribeDestinationsWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.DescribeDestinationsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeDestinationsWithContext indicates an expected call of DescribeDestinationsWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeDestinationsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeDestinationsWithContext", _s...)
}

// DescribeDestinationsRequest mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeDestinationsRequest(_param0 *cloudwatchlogs.DescribeDestinationsInput) (*request.Request, *cloudwatchlogs.DescribeDestinationsOutput) {
	ret := _m.ctrl.Call(_m, "DescribeDestinationsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.DescribeDestinationsOutput)
	return ret0, ret1
}

// DescribeDestinationsRequest indicates an expected call of DescribeDestinationsRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeDestinationsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeDestinationsRequest", arg0)
}

// DescribeDestinationsPages mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeDestinationsPages(_param0 *cloudwatchlogs.DescribeDestinationsInput, _param1 func(*cloudwatchlogs.DescribeDestinationsOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "DescribeDestinationsPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeDestinationsPages indicates an expected call of DescribeDestinationsPages
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeDestinationsPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeDestinationsPages", arg0, arg1)
}

// DescribeDestinationsPagesWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeDestinationsPagesWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DescribeDestinationsInput, _param2 func(*cloudwatchlogs.DescribeDestinationsOutput, bool) bool, _param3 ...request.Option) error {
	_s := []interface{}{_param0, _param1, _param2}
	for _, _x := range _param3 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DescribeDestinationsPagesWithContext", _s...)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeDestinationsPagesWithContext indicates an expected call of DescribeDestinationsPagesWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeDestinationsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeDestinationsPagesWithContext", _s...)
}

// DescribeExportTasks mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeExportTasks(_param0 *cloudwatchlogs.DescribeExportTasksInput) (*cloudwatchlogs.DescribeExportTasksOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeExportTasks", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.DescribeExportTasksOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeExportTasks indicates an expected call of DescribeExportTasks
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeExportTasks(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeExportTasks", arg0)
}

// DescribeExportTasksWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeExportTasksWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DescribeExportTasksInput, _param2 ...request.Option) (*cloudwatchlogs.DescribeExportTasksOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DescribeExportTasksWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.DescribeExportTasksOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeExportTasksWithContext indicates an expected call of DescribeExportTasksWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeExportTasksWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeExportTasksWithContext", _s...)
}

// DescribeExportTasksRequest mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeExportTasksRequest(_param0 *cloudwatchlogs.DescribeExportTasksInput) (*request.Request, *cloudwatchlogs.DescribeExportTasksOutput) {
	ret := _m.ctrl.Call(_m, "DescribeExportTasksRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.DescribeExportTasksOutput)
	return ret0, ret1
}

// DescribeExportTasksRequest indicates an expected call of DescribeExportTasksRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeExportTasksRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeExportTasksRequest", arg0)
}

// DescribeLogGroups mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeLogGroups(_param0 *cloudwatchlogs.DescribeLogGroupsInput) (*cloudwatchlogs.DescribeLogGroupsOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeLogGroups", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.DescribeLogGroupsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeLogGroups indicates an expected call of DescribeLogGroups
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeLogGroups(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLogGroups", arg0)
}

// DescribeLogGroupsWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeLogGroupsWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DescribeLogGroupsInput, _param2 ...request.Option) (*cloudwatchlogs.DescribeLogGroupsOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DescribeLogGroupsWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.DescribeLogGroupsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeLogGroupsWithContext indicates an expected call of DescribeLogGroupsWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeLogGroupsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLogGroupsWithContext", _s...)
}

// DescribeLogGroupsRequest mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeLogGroupsRequest(_param0 *cloudwatchlogs.DescribeLogGroupsInput) (*request.Request, *cloudwatchlogs.DescribeLogGroupsOutput) {
	ret := _m.ctrl.Call(_m, "DescribeLogGroupsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.DescribeLogGroupsOutput)
	return ret0, ret1
}

// DescribeLogGroupsRequest indicates an expected call of DescribeLogGroupsRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeLogGroupsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLogGroupsRequest", arg0)
}

// DescribeLogGroupsPages mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeLogGroupsPages(_param0 *cloudwatchlogs.DescribeLogGroupsInput, _param1 func(*cloudwatchlogs.DescribeLogGroupsOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "DescribeLogGroupsPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeLogGroupsPages indicates an expected call of DescribeLogGroupsPages
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeLogGroupsPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLogGroupsPages", arg0, arg1)
}

// DescribeLogGroupsPagesWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeLogGroupsPagesWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DescribeLogGroupsInput, _param2 func(*cloudwatchlogs.DescribeLogGroupsOutput, bool) bool, _param3 ...request.Option) error {
	_s := []interface{}{_param0, _param1, _param2}
	for _, _x := range _param3 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DescribeLogGroupsPagesWithContext", _s...)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeLogGroupsPagesWithContext indicates an expected call of DescribeLogGroupsPagesWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeLogGroupsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLogGroupsPagesWithContext", _s...)
}

// DescribeLogStreams mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeLogStreams(_param0 *cloudwatchlogs.DescribeLogStreamsInput) (*cloudwatchlogs.DescribeLogStreamsOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeLogStreams", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.DescribeLogStreamsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeLogStreams indicates an expected call of DescribeLogStreams
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeLogStreams(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLogStreams", arg0)
}

// DescribeLogStreamsWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeLogStreamsWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DescribeLogStreamsInput, _param2 ...request.Option) (*cloudwatchlogs.DescribeLogStreamsOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DescribeLogStreamsWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.DescribeLogStreamsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeLogStreamsWithContext indicates an expected call of DescribeLogStreamsWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeLogStreamsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLogStreamsWithContext", _s...)
}

// DescribeLogStreamsRequest mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeLogStreamsRequest(_param0 *cloudwatchlogs.DescribeLogStreamsInput) (*request.Request, *cloudwatchlogs.DescribeLogStreamsOutput) {
	ret := _m.ctrl.Call(_m, "DescribeLogStreamsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.DescribeLogStreamsOutput)
	return ret0, ret1
}

// DescribeLogStreamsRequest indicates an expected call of DescribeLogStreamsRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeLogStreamsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLogStreamsRequest", arg0)
}

// DescribeLogStreamsPages mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeLogStreamsPages(_param0 *cloudwatchlogs.DescribeLogStreamsInput, _param1 func(*cloudwatchlogs.DescribeLogStreamsOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "DescribeLogStreamsPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeLogStreamsPages indicates an expected call of DescribeLogStreamsPages
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeLogStreamsPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLogStreamsPages", arg0, arg1)
}

// DescribeLogStreamsPagesWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeLogStreamsPagesWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DescribeLogStreamsInput, _param2 func(*cloudwatchlogs.DescribeLogStreamsOutput, bool) bool, _param3 ...request.Option) error {
	_s := []interface{}{_param0, _param1, _param2}
	for _, _x := range _param3 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DescribeLogStreamsPagesWithContext", _s...)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeLogStreamsPagesWithContext indicates an expected call of DescribeLogStreamsPagesWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeLogStreamsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLogStreamsPagesWithContext", _s...)
}

// DescribeMetricFilters mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeMetricFilters(_param0 *cloudwatchlogs.DescribeMetricFiltersInput) (*cloudwatchlogs.DescribeMetricFiltersOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeMetricFilters", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.DescribeMetricFiltersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeMetricFilters indicates an expected call of DescribeMetricFilters
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeMetricFilters(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeMetricFilters", arg0)
}

// DescribeMetricFiltersWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeMetricFiltersWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DescribeMetricFiltersInput, _param2 ...request.Option) (*cloudwatchlogs.DescribeMetricFiltersOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DescribeMetricFiltersWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.DescribeMetricFiltersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeMetricFiltersWithContext indicates an expected call of DescribeMetricFiltersWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeMetricFiltersWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeMetricFiltersWithContext", _s...)
}

// DescribeMetricFiltersRequest mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeMetricFiltersRequest(_param0 *cloudwatchlogs.DescribeMetricFiltersInput) (*request.Request, *cloudwatchlogs.DescribeMetricFiltersOutput) {
	ret := _m.ctrl.Call(_m, "DescribeMetricFiltersRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.DescribeMetricFiltersOutput)
	return ret0, ret1
}

// DescribeMetricFiltersRequest indicates an expected call of DescribeMetricFiltersRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeMetricFiltersRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeMetricFiltersRequest", arg0)
}

// DescribeMetricFiltersPages mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeMetricFiltersPages(_param0 *cloudwatchlogs.DescribeMetricFiltersInput, _param1 func(*cloudwatchlogs.DescribeMetricFiltersOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "DescribeMetricFiltersPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeMetricFiltersPages indicates an expected call of DescribeMetricFiltersPages
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeMetricFiltersPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeMetricFiltersPages", arg0, arg1)
}

// DescribeMetricFiltersPagesWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeMetricFiltersPagesWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DescribeMetricFiltersInput, _param2 func(*cloudwatchlogs.DescribeMetricFiltersOutput, bool) bool, _param3 ...request.Option) error {
	_s := []interface{}{_param0, _param1, _param2}
	for _, _x := range _param3 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DescribeMetricFiltersPagesWithContext", _s...)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeMetricFiltersPagesWithContext indicates an expected call of DescribeMetricFiltersPagesWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeMetricFiltersPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeMetricFiltersPagesWithContext", _s...)
}

// DescribeSubscriptionFilters mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeSubscriptionFilters(_param0 *cloudwatchlogs.DescribeSubscriptionFiltersInput) (*cloudwatchlogs.DescribeSubscriptionFiltersOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeSubscriptionFilters", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.DescribeSubscriptionFiltersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeSubscriptionFilters indicates an expected call of DescribeSubscriptionFilters
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeSubscriptionFilters(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeSubscriptionFilters", arg0)
}

// DescribeSubscriptionFiltersWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeSubscriptionFiltersWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DescribeSubscriptionFiltersInput, _param2 ...request.Option) (*cloudwatchlogs.DescribeSubscriptionFiltersOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DescribeSubscriptionFiltersWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.DescribeSubscriptionFiltersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DescribeSubscriptionFiltersWithContext indicates an expected call of DescribeSubscriptionFiltersWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeSubscriptionFiltersWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeSubscriptionFiltersWithContext", _s...)
}

// DescribeSubscriptionFiltersRequest mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeSubscriptionFiltersRequest(_param0 *cloudwatchlogs.DescribeSubscriptionFiltersInput) (*request.Request, *cloudwatchlogs.DescribeSubscriptionFiltersOutput) {
	ret := _m.ctrl.Call(_m, "DescribeSubscriptionFiltersRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.DescribeSubscriptionFiltersOutput)
	return ret0, ret1
}

// DescribeSubscriptionFiltersRequest indicates an expected call of DescribeSubscriptionFiltersRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeSubscriptionFiltersRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeSubscriptionFiltersRequest", arg0)
}

// DescribeSubscriptionFiltersPages mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeSubscriptionFiltersPages(_param0 *cloudwatchlogs.DescribeSubscriptionFiltersInput, _param1 func(*cloudwatchlogs.DescribeSubscriptionFiltersOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "DescribeSubscriptionFiltersPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeSubscriptionFiltersPages indicates an expected call of DescribeSubscriptionFiltersPages
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeSubscriptionFiltersPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeSubscriptionFiltersPages", arg0, arg1)
}

// DescribeSubscriptionFiltersPagesWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) DescribeSubscriptionFiltersPagesWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.DescribeSubscriptionFiltersInput, _param2 func(*cloudwatchlogs.DescribeSubscriptionFiltersOutput, bool) bool, _param3 ...request.Option) error {
	_s := []interface{}{_param0, _param1, _param2}
	for _, _x := range _param3 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DescribeSubscriptionFiltersPagesWithContext", _s...)
	ret0, _ := ret[0].(error)
	return ret0
}

// DescribeSubscriptionFiltersPagesWithContext indicates an expected call of DescribeSubscriptionFiltersPagesWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) DescribeSubscriptionFiltersPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeSubscriptionFiltersPagesWithContext", _s...)
}

// FilterLogEvents mocks base method
func (_m *MockCloudWatchLogsAPI) FilterLogEvents(_param0 *cloudwatchlogs.FilterLogEventsInput) (*cloudwatchlogs.FilterLogEventsOutput, error) {
	ret := _m.ctrl.Call(_m, "FilterLogEvents", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.FilterLogEventsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FilterLogEvents indicates an expected call of FilterLogEvents
func (_mr *MockCloudWatchLogsAPIMockRecorder) FilterLogEvents(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "FilterLogEvents", arg0)
}

// FilterLogEventsWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) FilterLogEventsWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.FilterLogEventsInput, _param2 ...request.Option) (*cloudwatchlogs.FilterLogEventsOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "FilterLogEventsWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.FilterLogEventsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FilterLogEventsWithContext indicates an expected call of FilterLogEventsWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) FilterLogEventsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "FilterLogEventsWithContext", _s...)
}

// FilterLogEventsRequest mocks base method
func (_m *MockCloudWatchLogsAPI) FilterLogEventsRequest(_param0 *cloudwatchlogs.FilterLogEventsInput) (*request.Request, *cloudwatchlogs.FilterLogEventsOutput) {
	ret := _m.ctrl.Call(_m, "FilterLogEventsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.FilterLogEventsOutput)
	return ret0, ret1
}

// FilterLogEventsRequest indicates an expected call of FilterLogEventsRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) FilterLogEventsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "FilterLogEventsRequest", arg0)
}

// FilterLogEventsPages mocks base method
func (_m *MockCloudWatchLogsAPI) FilterLogEventsPages(_param0 *cloudwatchlogs.FilterLogEventsInput, _param1 func(*cloudwatchlogs.FilterLogEventsOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "FilterLogEventsPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

// FilterLogEventsPages indicates an expected call of FilterLogEventsPages
func (_mr *MockCloudWatchLogsAPIMockRecorder) FilterLogEventsPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "FilterLogEventsPages", arg0, arg1)
}

// FilterLogEventsPagesWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) FilterLogEventsPagesWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.FilterLogEventsInput, _param2 func(*cloudwatchlogs.FilterLogEventsOutput, bool) bool, _param3 ...request.Option) error {
	_s := []interface{}{_param0, _param1, _param2}
	for _, _x := range _param3 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "FilterLogEventsPagesWithContext", _s...)
	ret0, _ := ret[0].(error)
	return ret0
}

// FilterLogEventsPagesWithContext indicates an expected call of FilterLogEventsPagesWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) FilterLogEventsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "FilterLogEventsPagesWithContext", _s...)
}

// GetLogEvents mocks base method
func (_m *MockCloudWatchLogsAPI) GetLogEvents(_param0 *cloudwatchlogs.GetLogEventsInput) (*cloudwatchlogs.GetLogEventsOutput, error) {
	ret := _m.ctrl.Call(_m, "GetLogEvents", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.GetLogEventsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLogEvents indicates an expected call of GetLogEvents
func (_mr *MockCloudWatchLogsAPIMockRecorder) GetLogEvents(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLogEvents", arg0)
}

// GetLogEventsWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) GetLogEventsWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.GetLogEventsInput, _param2 ...request.Option) (*cloudwatchlogs.GetLogEventsOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "GetLogEventsWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.GetLogEventsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLogEventsWithContext indicates an expected call of GetLogEventsWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) GetLogEventsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLogEventsWithContext", _s...)
}

// GetLogEventsRequest mocks base method
func (_m *MockCloudWatchLogsAPI) GetLogEventsRequest(_param0 *cloudwatchlogs.GetLogEventsInput) (*request.Request, *cloudwatchlogs.GetLogEventsOutput) {
	ret := _m.ctrl.Call(_m, "GetLogEventsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.GetLogEventsOutput)
	return ret0, ret1
}

// GetLogEventsRequest indicates an expected call of GetLogEventsRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) GetLogEventsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLogEventsRequest", arg0)
}

// GetLogEventsPages mocks base method
func (_m *MockCloudWatchLogsAPI) GetLogEventsPages(_param0 *cloudwatchlogs.GetLogEventsInput, _param1 func(*cloudwatchlogs.GetLogEventsOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "GetLogEventsPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetLogEventsPages indicates an expected call of GetLogEventsPages
func (_mr *MockCloudWatchLogsAPIMockRecorder) GetLogEventsPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLogEventsPages", arg0, arg1)
}

// GetLogEventsPagesWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) GetLogEventsPagesWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.GetLogEventsInput, _param2 func(*cloudwatchlogs.GetLogEventsOutput, bool) bool, _param3 ...request.Option) error {
	_s := []interface{}{_param0, _param1, _param2}
	for _, _x := range _param3 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "GetLogEventsPagesWithContext", _s...)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetLogEventsPagesWithContext indicates an expected call of GetLogEventsPagesWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) GetLogEventsPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLogEventsPagesWithContext", _s...)
}

// ListTagsLogGroup mocks base method
func (_m *MockCloudWatchLogsAPI) ListTagsLogGroup(_param0 *cloudwatchlogs.ListTagsLogGroupInput) (*cloudwatchlogs.ListTagsLogGroupOutput, error) {
	ret := _m.ctrl.Call(_m, "ListTagsLogGroup", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.ListTagsLogGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsLogGroup indicates an expected call of ListTagsLogGroup
func (_mr *MockCloudWatchLogsAPIMockRecorder) ListTagsLogGroup(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListTagsLogGroup", arg0)
}

// ListTagsLogGroupWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) ListTagsLogGroupWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.ListTagsLogGroupInput, _param2 ...request.Option) (*cloudwatchlogs.ListTagsLogGroupOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "ListTagsLogGroupWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.ListTagsLogGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsLogGroupWithContext indicates an expected call of ListTagsLogGroupWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) ListTagsLogGroupWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListTagsLogGroupWithContext", _s...)
}

// ListTagsLogGroupRequest mocks base method
func (_m *MockCloudWatchLogsAPI) ListTagsLogGroupRequest(_param0 *cloudwatchlogs.ListTagsLogGroupInput) (*request.Request, *cloudwatchlogs.ListTagsLogGroupOutput) {
	ret := _m.ctrl.Call(_m, "ListTagsLogGroupRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.ListTagsLogGroupOutput)
	return ret0, ret1
}

// ListTagsLogGroupRequest indicates an expected call of ListTagsLogGroupRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) ListTagsLogGroupRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListTagsLogGroupRequest", arg0)
}

// PutDestination mocks base method
func (_m *MockCloudWatchLogsAPI) PutDestination(_param0 *cloudwatchlogs.PutDestinationInput) (*cloudwatchlogs.PutDestinationOutput, error) {
	ret := _m.ctrl.Call(_m, "PutDestination", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.PutDestinationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutDestination indicates an expected call of PutDestination
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutDestination(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutDestination", arg0)
}

// PutDestinationWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) PutDestinationWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.PutDestinationInput, _param2 ...request.Option) (*cloudwatchlogs.PutDestinationOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "PutDestinationWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.PutDestinationOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutDestinationWithContext indicates an expected call of PutDestinationWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutDestinationWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutDestinationWithContext", _s...)
}

// PutDestinationRequest mocks base method
func (_m *MockCloudWatchLogsAPI) PutDestinationRequest(_param0 *cloudwatchlogs.PutDestinationInput) (*request.Request, *cloudwatchlogs.PutDestinationOutput) {
	ret := _m.ctrl.Call(_m, "PutDestinationRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.PutDestinationOutput)
	return ret0, ret1
}

// PutDestinationRequest indicates an expected call of PutDestinationRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutDestinationRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutDestinationRequest", arg0)
}

// PutDestinationPolicy mocks base method
func (_m *MockCloudWatchLogsAPI) PutDestinationPolicy(_param0 *cloudwatchlogs.PutDestinationPolicyInput) (*cloudwatchlogs.PutDestinationPolicyOutput, error) {
	ret := _m.ctrl.Call(_m, "PutDestinationPolicy", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.PutDestinationPolicyOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutDestinationPolicy indicates an expected call of PutDestinationPolicy
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutDestinationPolicy(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutDestinationPolicy", arg0)
}

// PutDestinationPolicyWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) PutDestinationPolicyWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.PutDestinationPolicyInput, _param2 ...request.Option) (*cloudwatchlogs.PutDestinationPolicyOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "PutDestinationPolicyWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.PutDestinationPolicyOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutDestinationPolicyWithContext indicates an expected call of PutDestinationPolicyWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutDestinationPolicyWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutDestinationPolicyWithContext", _s...)
}

// PutDestinationPolicyRequest mocks base method
func (_m *MockCloudWatchLogsAPI) PutDestinationPolicyRequest(_param0 *cloudwatchlogs.PutDestinationPolicyInput) (*request.Request, *cloudwatchlogs.PutDestinationPolicyOutput) {
	ret := _m.ctrl.Call(_m, "PutDestinationPolicyRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.PutDestinationPolicyOutput)
	return ret0, ret1
}

// PutDestinationPolicyRequest indicates an expected call of PutDestinationPolicyRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutDestinationPolicyRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutDestinationPolicyRequest", arg0)
}

// PutLogEvents mocks base method
func (_m *MockCloudWatchLogsAPI) PutLogEvents(_param0 *cloudwatchlogs.PutLogEventsInput) (*cloudwatchlogs.PutLogEventsOutput, error) {
	ret := _m.ctrl.Call(_m, "PutLogEvents", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.PutLogEventsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutLogEvents indicates an expected call of PutLogEvents
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutLogEvents(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutLogEvents", arg0)
}

// PutLogEventsWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) PutLogEventsWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.PutLogEventsInput, _param2 ...request.Option) (*cloudwatchlogs.PutLogEventsOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "PutLogEventsWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.PutLogEventsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutLogEventsWithContext indicates an expected call of PutLogEventsWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutLogEventsWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutLogEventsWithContext", _s...)
}

// PutLogEventsRequest mocks base method
func (_m *MockCloudWatchLogsAPI) PutLogEventsRequest(_param0 *cloudwatchlogs.PutLogEventsInput) (*request.Request, *cloudwatchlogs.PutLogEventsOutput) {
	ret := _m.ctrl.Call(_m, "PutLogEventsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.PutLogEventsOutput)
	return ret0, ret1
}

// PutLogEventsRequest indicates an expected call of PutLogEventsRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutLogEventsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutLogEventsRequest", arg0)
}

// PutMetricFilter mocks base method
func (_m *MockCloudWatchLogsAPI) PutMetricFilter(_param0 *cloudwatchlogs.PutMetricFilterInput) (*cloudwatchlogs.PutMetricFilterOutput, error) {
	ret := _m.ctrl.Call(_m, "PutMetricFilter", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.PutMetricFilterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutMetricFilter indicates an expected call of PutMetricFilter
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutMetricFilter(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutMetricFilter", arg0)
}

// PutMetricFilterWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) PutMetricFilterWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.PutMetricFilterInput, _param2 ...request.Option) (*cloudwatchlogs.PutMetricFilterOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "PutMetricFilterWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.PutMetricFilterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutMetricFilterWithContext indicates an expected call of PutMetricFilterWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutMetricFilterWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutMetricFilterWithContext", _s...)
}

// PutMetricFilterRequest mocks base method
func (_m *MockCloudWatchLogsAPI) PutMetricFilterRequest(_param0 *cloudwatchlogs.PutMetricFilterInput) (*request.Request, *cloudwatchlogs.PutMetricFilterOutput) {
	ret := _m.ctrl.Call(_m, "PutMetricFilterRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.PutMetricFilterOutput)
	return ret0, ret1
}

// PutMetricFilterRequest indicates an expected call of PutMetricFilterRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutMetricFilterRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutMetricFilterRequest", arg0)
}

// PutRetentionPolicy mocks base method
func (_m *MockCloudWatchLogsAPI) PutRetentionPolicy(_param0 *cloudwatchlogs.PutRetentionPolicyInput) (*cloudwatchlogs.PutRetentionPolicyOutput, error) {
	ret := _m.ctrl.Call(_m, "PutRetentionPolicy", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.PutRetentionPolicyOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutRetentionPolicy indicates an expected call of PutRetentionPolicy
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutRetentionPolicy(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutRetentionPolicy", arg0)
}

// PutRetentionPolicyWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) PutRetentionPolicyWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.PutRetentionPolicyInput, _param2 ...request.Option) (*cloudwatchlogs.PutRetentionPolicyOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "PutRetentionPolicyWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.PutRetentionPolicyOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutRetentionPolicyWithContext indicates an expected call of PutRetentionPolicyWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutRetentionPolicyWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutRetentionPolicyWithContext", _s...)
}

// PutRetentionPolicyRequest mocks base method
func (_m *MockCloudWatchLogsAPI) PutRetentionPolicyRequest(_param0 *cloudwatchlogs.PutRetentionPolicyInput) (*request.Request, *cloudwatchlogs.PutRetentionPolicyOutput) {
	ret := _m.ctrl.Call(_m, "PutRetentionPolicyRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.PutRetentionPolicyOutput)
	return ret0, ret1
}

// PutRetentionPolicyRequest indicates an expected call of PutRetentionPolicyRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutRetentionPolicyRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutRetentionPolicyRequest", arg0)
}

// PutSubscriptionFilter mocks base method
func (_m *MockCloudWatchLogsAPI) PutSubscriptionFilter(_param0 *cloudwatchlogs.PutSubscriptionFilterInput) (*cloudwatchlogs.PutSubscriptionFilterOutput, error) {
	ret := _m.ctrl.Call(_m, "PutSubscriptionFilter", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.PutSubscriptionFilterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutSubscriptionFilter indicates an expected call of PutSubscriptionFilter
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutSubscriptionFilter(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutSubscriptionFilter", arg0)
}

// PutSubscriptionFilterWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) PutSubscriptionFilterWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.PutSubscriptionFilterInput, _param2 ...request.Option) (*cloudwatchlogs.PutSubscriptionFilterOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "PutSubscriptionFilterWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.PutSubscriptionFilterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutSubscriptionFilterWithContext indicates an expected call of PutSubscriptionFilterWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutSubscriptionFilterWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutSubscriptionFilterWithContext", _s...)
}

// PutSubscriptionFilterRequest mocks base method
func (_m *MockCloudWatchLogsAPI) PutSubscriptionFilterRequest(_param0 *cloudwatchlogs.PutSubscriptionFilterInput) (*request.Request, *cloudwatchlogs.PutSubscriptionFilterOutput) {
	ret := _m.ctrl.Call(_m, "PutSubscriptionFilterRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.PutSubscriptionFilterOutput)
	return ret0, ret1
}

// PutSubscriptionFilterRequest indicates an expected call of PutSubscriptionFilterRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) PutSubscriptionFilterRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutSubscriptionFilterRequest", arg0)
}

// TagLogGroup mocks base method
func (_m *MockCloudWatchLogsAPI) TagLogGroup(_param0 *cloudwatchlogs.TagLogGroupInput) (*cloudwatchlogs.TagLogGroupOutput, error) {
	ret := _m.ctrl.Call(_m, "TagLogGroup", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.TagLogGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagLogGroup indicates an expected call of TagLogGroup
func (_mr *MockCloudWatchLogsAPIMockRecorder) TagLogGroup(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "TagLogGroup", arg0)
}

// TagLogGroupWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) TagLogGroupWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.TagLogGroupInput, _param2 ...request.Option) (*cloudwatchlogs.TagLogGroupOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "TagLogGroupWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.TagLogGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagLogGroupWithContext indicates an expected call of TagLogGroupWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) TagLogGroupWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "TagLogGroupWithContext", _s...)
}

// TagLogGroupRequest mocks base method
func (_m *MockCloudWatchLogsAPI) TagLogGroupRequest(_param0 *cloudwatchlogs.TagLogGroupInput) (*request.Request, *cloudwatchlogs.TagLogGroupOutput) {
	ret := _m.ctrl.Call(_m, "TagLogGroupRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.TagLogGroupOutput)
	return ret0, ret1
}

// TagLogGroupRequest indicates an expected call of TagLogGroupRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) TagLogGroupRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "TagLogGroupRequest", arg0)
}

// TestMetricFilter mocks base method
func (_m *MockCloudWatchLogsAPI) TestMetricFilter(_param0 *cloudwatchlogs.TestMetricFilterInput) (*cloudwatchlogs.TestMetricFilterOutput, error) {
	ret := _m.ctrl.Call(_m, "TestMetricFilter", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.TestMetricFilterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TestMetricFilter indicates an expected call of TestMetricFilter
func (_mr *MockCloudWatchLogsAPIMockRecorder) TestMetricFilter(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "TestMetricFilter", arg0)
}

// TestMetricFilterWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) TestMetricFilterWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.TestMetricFilterInput, _param2 ...request.Option) (*cloudwatchlogs.TestMetricFilterOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "TestMetricFilterWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.TestMetricFilterOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TestMetricFilterWithContext indicates an expected call of TestMetricFilterWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) TestMetricFilterWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "TestMetricFilterWithContext", _s...)
}

// TestMetricFilterRequest mocks base method
func (_m *MockCloudWatchLogsAPI) TestMetricFilterRequest(_param0 *cloudwatchlogs.TestMetricFilterInput) (*request.Request, *cloudwatchlogs.TestMetricFilterOutput) {
	ret := _m.ctrl.Call(_m, "TestMetricFilterRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.TestMetricFilterOutput)
	return ret0, ret1
}

// TestMetricFilterRequest indicates an expected call of TestMetricFilterRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) TestMetricFilterRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "TestMetricFilterRequest", arg0)
}

// UntagLogGroup mocks base method
func (_m *MockCloudWatchLogsAPI) UntagLogGroup(_param0 *cloudwatchlogs.UntagLogGroupInput) (*cloudwatchlogs.UntagLogGroupOutput, error) {
	ret := _m.ctrl.Call(_m, "UntagLogGroup", _param0)
	ret0, _ := ret[0].(*cloudwatchlogs.UntagLogGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagLogGroup indicates an expected call of UntagLogGroup
func (_mr *MockCloudWatchLogsAPIMockRecorder) UntagLogGroup(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UntagLogGroup", arg0)
}

// UntagLogGroupWithContext mocks base method
func (_m *MockCloudWatchLogsAPI) UntagLogGroupWithContext(_param0 aws.Context, _param1 *cloudwatchlogs.UntagLogGroupInput, _param2 ...request.Option) (*cloudwatchlogs.UntagLogGroupOutput, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "UntagLogGroupWithContext", _s...)
	ret0, _ := ret[0].(*cloudwatchlogs.UntagLogGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagLogGroupWithContext indicates an expected call of UntagLogGroupWithContext
func (_mr *MockCloudWatchLogsAPIMockRecorder) UntagLogGroupWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UntagLogGroupWithContext", _s...)
}

// UntagLogGroupRequest mocks base method
func (_m *MockCloudWatchLogsAPI) UntagLogGroupRequest(_param0 *cloudwatchlogs.UntagLogGroupInput) (*request.Request, *cloudwatchlogs.UntagLogGroupOutput) {
	ret := _m.ctrl.Call(_m, "UntagLogGroupRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatchlogs.UntagLogGroupOutput)
	return ret0, ret1
}

// UntagLogGroupRequest indicates an expected call of UntagLogGroupRequest
func (_mr *MockCloudWatchLogsAPIMockRecorder) UntagLogGroupRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UntagLogGroupRequest", arg0)
}
